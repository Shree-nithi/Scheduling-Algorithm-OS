{"version":3,"sources":["gantt.js"],"names":["processes","id","arrivalTime","burstTime","sort","a","b","ganttChart","currentTime","i","length","process","completionTime","push","startTime","endTime","console","log"],"mappings":";;AAAA;AACA,IAAMA,SAAS,GAAG,CACd;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,WAAW,EAAE,CAAzB;AAA4BC,EAAAA,SAAS,EAAE;AAAvC,CADc,EAEd;AAAEF,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,WAAW,EAAE,CAAzB;AAA4BC,EAAAA,SAAS,EAAE;AAAvC,CAFc,EAGd;AAAEF,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,WAAW,EAAE,CAAzB;AAA4BC,EAAAA,SAAS,EAAE;AAAvC,CAHc,EAId;AAAEF,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,WAAW,EAAE,CAAzB;AAA4BC,EAAAA,SAAS,EAAE;AAAvC,CAJc,CAAlB,C,CAOE;;AACAH,SAAS,CAACI,IAAV,CAAe,UAACC,CAAD,EAAIC,CAAJ;AAAA,SAAUD,CAAC,CAACH,WAAF,GAAgBI,CAAC,CAACJ,WAA5B;AAAA,CAAf,E,CAEA;;AACA,IAAMK,UAAU,GAAG,EAAnB,C,CAEA;;AACA,IAAIC,WAAW,GAAG,CAAlB,C,CAEA;;AACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,SAAS,CAACU,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzC,MAAME,OAAO,GAAGX,SAAS,CAACS,CAAD,CAAzB;AACA,MAAMG,cAAc,GAAGJ,WAAW,GAAGG,OAAO,CAACR,SAA7C,CAFyC,CAIzC;;AACAI,EAAAA,UAAU,CAACM,IAAX,CAAgB;AAAEZ,IAAAA,EAAE,EAAEU,OAAO,CAACV,EAAd;AAAkBa,IAAAA,SAAS,EAAEN,WAA7B;AAA0CO,IAAAA,OAAO,EAAEH;AAAnD,GAAhB,EALyC,CAOzC;;AACAJ,EAAAA,WAAW,GAAGI,cAAd;AACD,C,CAED;;;AACAI,OAAO,CAACC,GAAR,CAAY,gEAAZ;AACAD,OAAO,CAACC,GAAR,CAAY,oEAAZ;AACAD,OAAO,CAACC,GAAR,CAAY,kEAAZ;;AACA,KAAK,IAAIR,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGF,UAAU,CAACG,MAA/B,EAAuCD,EAAC,EAAxC,EAA4C;AAC1C,MAAME,QAAO,GAAGJ,UAAU,CAACE,EAAD,CAA1B;AACAO,EAAAA,OAAO,CAACC,GAAR,kBAAsBN,QAAO,CAACV,EAA9B,2BAAiDU,QAAO,CAACI,OAAR,GAAkBJ,QAAO,CAACG,SAA3E,2BAAqGH,QAAO,CAACG,SAA7G,6BAAyIH,QAAO,CAACI,OAAjJ;AACD;;AACDC,OAAO,CAACC,GAAR,CAAY,gEAAZ","sourcesContent":["// Define an array of processes with their respective arrival times and burst times\r\nconst processes = [\r\n    { id: \"P1\", arrivalTime: 0, burstTime: 4 },\r\n    { id: \"P2\", arrivalTime: 1, burstTime: 3 },\r\n    { id: \"P3\", arrivalTime: 2, burstTime: 2 },\r\n    { id: \"P4\", arrivalTime: 3, burstTime: 1 }\r\n  ];\r\n  \r\n  // Sort the processes by their arrival times\r\n  processes.sort((a, b) => a.arrivalTime - b.arrivalTime);\r\n  \r\n  // Initialize an empty Gantt chart array\r\n  const ganttChart = [];\r\n  \r\n  // Initialize a variable to keep track of the current time\r\n  let currentTime = 0;\r\n  \r\n  // Iterate over the processes and calculate their completion times\r\n  for (let i = 0; i < processes.length; i++) {\r\n    const process = processes[i];\r\n    const completionTime = currentTime + process.burstTime;\r\n    \r\n    // Add the process and its completion time to the Gantt chart array\r\n    ganttChart.push({ id: process.id, startTime: currentTime, endTime: completionTime });\r\n    \r\n    // Update the current time to the completion time of the current process\r\n    currentTime = completionTime;\r\n  }\r\n  \r\n  // Print the Gantt chart to the console\r\n  console.log(\"|------------------------------------------------------------|\");\r\n  console.log(\"|   Process   |   Burst Time   |  Arrival Time | Completion Time |\");\r\n  console.log(\"|-------------|---------------|---------------|----------------|\");\r\n  for (let i = 0; i < ganttChart.length; i++) {\r\n    const process = ganttChart[i];\r\n    console.log(`|      ${process.id}     |        ${process.endTime - process.startTime}      |       ${process.startTime}       |        ${process.endTime}      |`);\r\n  }\r\n  console.log(\"|------------------------------------------------------------|\");\r\n  "],"file":"gantt.dev.js"}